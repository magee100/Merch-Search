{"ast":null,"code":"var _jsxFileName = \"/Users/andrewmagee/Desktop/test-folder/Merch-Search/client/src/pages/Archive.js\";\nimport React, { Component } from \"react\";\nimport API from \"../utils/API\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\n\nclass Archive extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      items: []\n    };\n\n    this.loadItems = () => {\n      API.getItems().then(res => this.setState({\n        items: res.data\n      })).catch(err => console.log(err));\n    };\n  }\n\n  componentDidMount() {\n    this.loadItems();\n  }\n\n  render() {\n    return React.createElement(Container, {\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, this.state.books.length ? React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, this.state.items.map(item => React.createElement(ListItem, {\n      key: item._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, item.artist, \" | \", item.type | item.desc, \" | \", item.color, \" | \", item.brand, \" | \", item.photo, \" | \", item.date))) : React.createElement(H1, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"Failed to Execute\"));\n  }\n\n}\n\nexport default Archive;","map":{"version":3,"sources":["/Users/andrewmagee/Desktop/test-folder/Merch-Search/client/src/pages/Archive.js"],"names":["React","Component","API","Link","Col","Row","Container","List","ListItem","Archive","state","items","loadItems","getItems","then","res","setState","data","catch","err","console","log","componentDidMount","render","books","length","map","item","_id","artist","type","desc","color","brand","photo","date"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAgC,OAAhC;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,SAAnB,QAAoC,oBAApC;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,oBAA/B;;AAEA,MAAMC,OAAN,SAAsBR,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAC5BS,KAD4B,GACpB;AACJC,MAAAA,KAAK,EAAE;AADH,KADoB;;AAAA,SAS5BC,SAT4B,GAShB,MAAM;AACdV,MAAAA,GAAG,CAACW,QAAJ,GACCC,IADD,CACMC,GAAG,IACL,KAAKC,QAAL,CAAc;AAAEL,QAAAA,KAAK,EAAEI,GAAG,CAACE;AAAb,OAAd,CAFJ,EAIKC,KAJL,CAIWC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAJlB;AAKH,KAf2B;AAAA;;AAK5BG,EAAAA,iBAAiB,GAAG;AAChB,SAAKV,SAAL;AACH;;AAUDW,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,SAAD;AAAW,MAAA,KAAK,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGK,KAAKb,KAAL,CAAWc,KAAX,CAAiBC,MAAjB,GACG,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKf,KAAL,CAAWC,KAAX,CAAiBe,GAAjB,CAAqBC,IAAI,IACtB,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,IAAI,CAACC,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACCD,IAAI,CAACE,MADN,SACiBF,IAAI,CAACG,IAAL,GAAYH,IAAI,CAACI,IADlC,SAC2CJ,IAAI,CAACK,KADhD,SAC0DL,IAAI,CAACM,KAD/D,SACyEN,IAAI,CAACO,KAD9E,SACwFP,IAAI,CAACQ,IAD7F,CADH,CADL,CADH,GAUG,oBAAC,EAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAbR,CADJ;AAkBH;;AApC2B;;AAuChC,eAAe1B,OAAf","sourcesContent":["import React, { Component} from \"react\";\nimport API from \"../utils/API\";\nimport { Link } from \"react-router-dom\"\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\n\nclass Archive extends Component {\n    state = {\n        items: []\n    };\n\n    componentDidMount() {\n        this.loadItems();\n    }\n\n    loadItems = () => {\n        API.getItems()\n        .then(res => \n            this.setState({ items: res.data, })\n            )\n            .catch(err => console.log(err));\n    };\n\n    render() {\n        return (\n            <Container fluid>\n            \n\n                {this.state.books.length ? (\n                    <List>\n                        {this.state.items.map(item => (\n                            <ListItem key={item._id}>\n                            {item.artist} | {item.type | item.desc} | {item.color} | {item.brand} | {item.photo} | {item.date}\n                            </ListItem>\n                        ))}\n                        \n                    </List>\n                ) : (\n                    <H1>Failed to Execute</H1>\n                )}\n            </Container>\n        );\n    }\n}\n\nexport default Archive;"]},"metadata":{},"sourceType":"module"}